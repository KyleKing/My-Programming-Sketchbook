#include "U8glib.h"

U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_NONE);	// HW SPI Com: CS = 10, A0 = 9 (Hardware Pins are  SCK = 13 and MOSI = 11)

//static unsigned char u8g_logo_bits[] = {
static unsigned char u8g_logo_bits[] U8G_PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x01,0xE0,
  0x03,0x00,0x00,0x00,0x00,0x7E,0x00,0xF0,0x01,0x00,0x00,0x00,
  0x00,0xFE,0xF9,0xF7,0x07,0x00,0x00,0x00,0x00,0x3C,0x00,0xF8,
  0x03,0x00,0x00,0x00,0x00,0xFC,0xF9,0xE1,0x03,0x00,0x00,0x00,
  0x00,0x38,0x00,0xF0,0x01,0x00,0x00,0x00,0x00,0xFC,0xFF,0x01,
  0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0xFC,0xEF,0xF9,0x8F,0xD7,0x73,0xF1,0xC1,0x3B,0x9F,0xFF,
  0xFF,0x1E,0x3E,0x00,0x00,0xBC,0xEF,0xC1,0xE1,0x9F,0xFF,0xDD,
  0xE3,0x3F,0xCC,0xE1,0xF0,0xBF,0x7B,0x00,0x00,0x3C,0xF7,0xE1,
  0xE1,0x9F,0xFF,0xC6,0xF7,0x3E,0x8E,0xF3,0xF0,0xFF,0xF8,0x00,
  0x00,0x3C,0xF3,0xE1,0xF1,0x93,0xFF,0xE6,0xF7,0x3C,0x8F,0xF7,
  0xF0,0xFF,0xFC,0x00,0x00,0x7C,0xF2,0xE1,0xF1,0x83,0x87,0xFE,
  0xF7,0x39,0xFF,0xF7,0xF0,0xFF,0xFF,0x00,0x00,0x7C,0xF0,0xE3,
  0xF3,0xA3,0x03,0xFE,0xF7,0x3F,0xFF,0xF7,0x71,0xFC,0xFF,0x00,
  0x00,0x7C,0xF8,0xE3,0xF3,0xBF,0x03,0xFE,0xE3,0x3F,0xFF,0xF3,
  0x71,0xDC,0x7F,0x00,0x00,0x7E,0xFC,0xE7,0xE3,0xBF,0x03,0xFC,
  0xE3,0x3F,0xFE,0xF3,0x71,0x9C,0x7F,0x00,0x00,0xC1,0x03,0xF8,
  0xCF,0xE7,0x0F,0xF0,0x00,0x7F,0xFC,0xFC,0xFF,0x3E,0x1E,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
//阳码、逐行、逆向
static unsigned char u8g_logo_bits1[] U8G_PROGMEM = {
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFD,0xEF,0xFF,0xFF,0xF3,0x87,0xFF,
0xFF,0xE3,0xE7,0xFF,0xFF,0xE7,0xF3,0xFF,0xFF,0xE7,0xFB,0xF9,0x0F,0x00,0x00,0xF0,
0xFF,0x7F,0xFE,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0x7F,0xFE,0xFE,0xFF,0x7F,0x7E,0xFC,
0x3F,0x00,0x80,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0x7F,0xFE,0xF7,0xFF,0x7F,0xFE,0xE3,
0x03,0x00,0x00,0xC0,0xFF,0x7F,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0x3F,0xFF,0xFD,
0x07,0x00,0x00,0xF8,0xFF,0x3F,0xFE,0xFF,0xFF,0x9F,0xFD,0xFF,0xFF,0x9F,0xFB,0xFF,
0xFF,0xCF,0xF3,0xFF,0xFF,0xCF,0xE7,0xFF,0xFF,0xE7,0x8F,0xFF,0xFF,0xF1,0x1F,0xFE,
0xFF,0xFC,0x7F,0xC0,0x1F,0xFF,0xFF,0xE0,0xE7,0xFF,0xFF,0xF7,0xFF,0xFF,0xFF,0xFF,//美0
};

static unsigned char u8g_logo_bits2[] U8G_PROGMEM = {
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xFF,0xC7,0xFF,0xFC,
0xFF,0x81,0xFF,0xFC,0x0F,0xFC,0xFF,0xFC,0xF7,0xFC,0xFD,0xFC,0xFF,0xFC,0xF3,0xFC,
0xFF,0xFC,0xE3,0xFC,0xFF,0xFC,0xE7,0xFC,0xFF,0xDC,0xE7,0xFC,0xFF,0x8C,0xFF,0xFC,
0x03,0x00,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFD,0xFC,0x7F,0xF8,0xF3,0xFC,
0x7F,0xE4,0xF3,0xFC,0x3F,0xCC,0xF7,0xFC,0xBF,0xCC,0xF7,0xCC,0x9F,0xDC,0xFF,0xC0,
0xCF,0xFC,0x1F,0xFC,0xEF,0xFC,0xE0,0xFC,0xF7,0x1C,0xFF,0xFC,0xFB,0xFC,0xFF,0xFC,
0xFD,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,
0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFF,0xFF,0xFF,//科1
};

static unsigned char u8g_logo_bits3[] U8G_PROGMEM = {
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xFF,0xC7,0xFF,0xFC,
0xFF,0x81,0xFF,0xFC,0x0F,0xFC,0xFF,0xFC,0xF7,0xFC,0xFD,0xFC,0xFF,0xFC,0xF3,0xFC,
0xFF,0xFC,0xE3,0xFC,0xFF,0xFC,0xE7,0xFC,0xFF,0xDC,0xE7,0xFC,0xFF,0x8C,0xFF,0xFC,
0x03,0x00,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFD,0xFC,0x7F,0xF8,0xF3,0xFC,
0x7F,0xE4,0xF3,0xFC,0x3F,0xCC,0xF7,0xFC,0xBF,0xCC,0xF7,0xCC,0x9F,0xDC,0xFF,0xC0,
0xCF,0xFC,0x1F,0xFC,0xEF,0xFC,0xE0,0xFC,0xF7,0x1C,0xFF,0xFC,0xFB,0xFC,0xFF,0xFC,
0xFD,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,
0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFC,0xFF,0xFF,0xFF,0xFF,//科1 
};

static unsigned char u8g_logo_bits4[] U8G_PROGMEM = {
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xEF,0xFF,0x7F,0xFC,0x8F,0xFF,
0x7F,0xFE,0xCF,0xFF,0x7F,0xFE,0xCF,0xFF,0x7F,0xFE,0xCF,0xFF,0x7F,0xFE,0xCF,0xFF,
0x7F,0xE6,0xCF,0xE7,0x03,0x00,0x00,0xC0,0x7F,0xFE,0xCF,0xFF,0x7F,0xFE,0xCF,0xFF,
0x7F,0xFE,0xCF,0xFF,0x7F,0xFE,0xCF,0xFF,0x7F,0xCE,0xCF,0xFB,0x7F,0x32,0x00,0xF0,
0x7F,0xFC,0xFE,0xF9,0x0F,0xFE,0xFE,0xF9,0x43,0xFE,0xFD,0xFC,0x73,0xFE,0xFD,0xFC,
0x7F,0xFE,0x7B,0xFE,0x7F,0xFE,0x7B,0xFE,0x7F,0xFE,0x33,0xFF,0x7F,0xFE,0x87,0xFF,
0x7F,0xFE,0xCF,0xFF,0x7F,0xFE,0x87,0xFF,0x7F,0xFE,0x13,0xFF,0x7F,0xFE,0x38,0xFC,
0x07,0x3E,0xFE,0xE0,0x1F,0x8E,0xFF,0xC1,0xBF,0xF3,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,//技3  
};

long timer;
int pkj=0;


void draw(void) {
  u8g.setFont(u8g_font_7x14);
  u8g.setPrintPos(pkj, 64); 
  u8g.print("Welcome! www.microduino.cc");
  u8g.drawXBMP( 0, 0, 128, 18, u8g_logo_bits);
  u8g.drawXBMP( 0, 18, 32, 32, u8g_logo_bits1);
  u8g.drawXBMP( 32, 18, 32, 32, u8g_logo_bits2);
  u8g.drawXBMP( 64, 18, 32, 32, u8g_logo_bits3);
  u8g.drawXBMP( 96, 18, 32, 32, u8g_logo_bits4);
}

void setup(void) {
  // flip screen, if required
  // u8g.setRot180();
  timer=millis();
}

void loop(void) {
  // picture loop
  if(millis()-timer>2)
  {
    timer=millis();
    pkj-=4;
//    if(pkj<-150)
//      pkj=150;
  }
  u8g.firstPage();  
  do {
    draw();
  } 
  while( u8g.nextPage() );

}
