DailyBikeData = new Mongo.Collection('dailyBikeData');

if (Meteor.isServer) {
  var Position, blank, countTime, i, namePoint, now, randGPSPoint, randomNow, ref, today;

  var RandNames = ['Anastasia', 'Marie', 'Chuff', 'Kate', 'Harry', 'Snow', 'Lake', 'Shameka', 'Loh'];

  function randGPS(num) {
    var randCoordinates, randLat, randLng;
    var leftLat = 38.994052; var rightLat = 38.981376;
    var bottomLng = -76.936569; var topLng = -76.950603;
    var skew = 1000000;
    randLat = [];
    randLng = [];
    _.times(num, function() {
      randLat.push(_.random(leftLat * skew, rightLat * skew) / skew);
    });
    _.times(num, function() {
      randLng.push(_.random(bottomLng * skew, topLng * skew) / skew);
    });
    randCoordinates = {
      lat: randLat,
      lng: randLng
    };
    return randCoordinates;
  };

  ref = CurrentDay(), today = ref[0], now = ref[1];

  if (DailyBikeData.find({
    Day: today
  }).count() === 0) {
    i = 1;
    while (i <= 200) {
      Position = [];
      randomNow = NaN;
      blank = {};
      countTime = 0;
      while (countTime < 30) {
        randomNow = now - (10000000 * Math.random());
        namePoint = Math.round((RandNames.length - 1) * Math.random());
        randGPSPoint = Math.round(1 * Math.random());
        blank = {
          Rider: RandNames[namePoint],
          Timestamp: randomNow,
          Lat: randGPS(2).lat[randGPSPoint],
          Lng: randGPS(2).lng[randGPSPoint]
        };
        Position.push(blank);
        countTime++;
      }
      DailyBikeData.insert({
        Bike: i,
        Day: today,
        Tag: Math.round(0.65 * Math.random()) === 0 ? 'Available' : 'RepairInProgress',
        Positions: Position
      });
      i++;
    }
    console.log('Created DailyBikeData data schema');
  }

  // ---
  // generated by coffee-script 1.9.2

  Meteor.publish("dailyBikeData", function () {
    return DailyBikeData.find({});
  });

}


if (Meteor.isClient) {
  Template.map.rendered = function() {
    return Meteor.subscribe("dailyBikeData", function() {
      L.Icon.Default.imagePath = 'leaflet/images';
      var HERE_hybridDayMobile, map;
      if (Meteor.isClient) {
        map = new L.Map('BikeMap', { center: new L.LatLng(38.987701, -76.940989) });
        HERE_hybridDayMobile = L.tileLayer('http://{s}.{base}.maps.cit.api.here.com/maptile/2.1/maptile/{mapID}/hybrid.day.mobile/{z}/{x}/{y}/256/png8?app_id={app_id}&app_code={app_code}', {
          attribution: 'Map &copy; 1987-2014 <a href="http://developer.here.com">HERE</a>',
          subdomains: '1234',
          mapID: 'newest',
          app_id: 'JIX0epTdHneK1hQlqfkr',
          app_code: 'PchnUPPBcZ5VAuHmovac8g',
          base: 'aerial'
        }).addTo(map);
      }
      // // Add bike locations to map
      // var i = bikesData.length - 1;
      // while (i >= 1) {
      //   if (!isNaN(bikesData[i].Lat)) {
      //     markers.addLayer( new L.Marker(new L.LatLng(bikesData[i].Lat, bikesData[i].Long), {icon: bikeIconGR} ) );
      //     console.log(bikesData[i]);
      //   } else {
      //     console.log("Bad Bike Location (NaN) - i.e. the current database is empty");
      //   }
      //   i--;
      // }
      // map.addLayer(markers); map.locate({
      //   setView: true
      // }).on("locationfound", function(e) {
      //
      // var marker;
      //   marker = L.marker([e.latitude, e.longitude]).addTo(map);
      // });
    });
  };
  return;
}

// ---
// generated by coffee-script 1.9.2


// Template.map.rendered = function() {
//   return Meteor.subscribe('AvailableBikeLocationsPub', function() {
//     var HERE_hybridDayMobile, bikesData, i, map, markers, meMarker, redBike, zoomControl;
//     if (Meteor.isClient) {
//       console.log(AvailableBikeLocations.find().count());
//
//       /******************************************** */
//
//       /*   Configure Leaflet Map */
//
//       /******************************************* */
//       map = new L.Map('map', {
//         center: new L.LatLng(38.987701, -76.940989),
//         maxZoom: 20,
//         zoom: 16,
//         zoomControl: false
//       });
//       HERE_hybridDayMobile = L.tileLayer('http://{s}.{base}.maps.cit.api.here.com/maptile/2.1/maptile/{mapID}/hybrid.day.mobile/{z}/{x}/{y}/256/png8?app_id={app_id}&app_code={app_code}', {
//         attribution: 'Map &copy; 1987-2014 <a href="http://developer.here.com">HERE</a>',
//         subdomains: '1234',
//         mapID: 'newest',
//         app_id: 'JIX0epTdHneK1hQlqfkr',
//         app_code: 'PchnUPPBcZ5VAuHmovac8g',
//         base: 'aerial',
//         minZoom: 0,
//         maxZoom: 20
//       }).addTo(map);
//       zoomControl = L.control.zoom({
//         position: 'bottomleft'
//       });
//       map.addControl(zoomControl);
//
//       /******************************************** */
//
//       /*   Plot 'current' collection with available bike locations */
//
//       /******************************************* */
//       redBike = L.AwesomeMarkers.icon({
//         prefix: 'fa',
//         icon: 'bicycle',
//         markerColor: 'red',
//         iconColor: 'white'
//       });
//       markers = new L.MarkerClusterGroup;
//       map.addLayer(markers);
//       bikesData = AvailableBikeLocations.find().fetch();
//       console.log(bikesData);
//       i = bikesData.length - 1;
//       while (i >= 1) {
//         if (!isNaN(bikesData[i].Positions.Lat)) {
//           markers.addLayer(new L.Marker(new L.LatLng(bikesData[i].Positions.Lat, bikesData[i].Positions.Lng), {
//             icon: redBike
//           }));
//           console.log(bikesData[i]);
//         } else {
//           console.log('Bad Bike Location (NaN) - i.e. the current database is empty');
//           console.log(bikesData[i]);
//         }
//         i--;
//       }
//       map.addLayer(markers);
//
//       /******************************************** */
//
//       /*   Plot the user */
//
//       /******************************************* */
//       meMarker = L.AwesomeMarkers.icon({
//         prefix: 'fa',
//         icon: 'user',
//         markerColor: 'blue',
//         iconColor: 'white'
//       });
//       map.locate({
//         setView: true
//       }).on('locationfound', function(e) {
//         var marker;
//         marker = L.marker([e.latitude, e.longitude], {
//           icon: redMarker
//         }).addTo(map);
//       });
//     }
//   });
// };
//
// // ---
// // generated by coffee-script 1.9.2
