
maple_usb.h,680
#define __MAPLE_USB_H2,22
#define BTABLE_ADDRESS 8,128
#define ENDP0_RXADDR 9,157
#define ENDP0_TXADDR 10,186
#define bMaxPacketSize 11,250
#define wTransferSize 12,321
#define NUM_ENDPTS 13,439
#define ISR_MSK 16,512
typedef enum _RESUME_STATE27,777
    RESUME_EXTERNAL,29,808
    RESUME_INTERNAL,30,829
    RESUME_LATER,31,850
    RESUME_WAIT,32,868
    RESUME_START,33,885
    RESUME_ON,34,903
    RESUME_OFF,35,918
    RESUME_ESOF36,934
  } RESUME_STATE;37,950
typedef enum _DEVICE_STATE39,969
    UNCONNECTED,41,1000
    ATTACHED,42,1017
    POWERED,43,1031
    SUSPENDED,44,1044
    ADDRESSED,45,1059
    CONFIGURED46,1074
  } DEVICE_STATE;47,1089

maple_usb_desc.c,714
u8 u8_usbDeviceDescriptor[u8_usbDeviceDescriptor3,29
ONE_DESCRIPTOR usbDeviceDescriptor 25,745
u8 u8_usbFunctionalDescriptor[u8_usbFunctionalDescriptor31,830
ONE_DESCRIPTOR usbFunctionalDescriptor 45,1288
u8 u8_usbConfigDescriptor[u8_usbConfigDescriptor52,1382
ONE_DESCRIPTOR usbConfigDescriptor 101,3253
u8 u8_usbStringLangId[u8_usbStringLangId107,3338
u8 u8_usbStringVendor[u8_usbStringVendor115,3456
u8 u8_usbStringProduct[u8_usbStringProduct122,3569
u8 u8_usbStringSerial[u8_usbStringSerial129,3689
u8 u8_usbStringAlt0[u8_usbStringAlt0136,3796
u8 u8_usbStringAlt1[u8_usbStringAlt1145,4025
u8 u8_usbStringInterface 155,4271
ONE_DESCRIPTOR usbStringDescriptor[usbStringDescriptor157,4305

maple_lib.h,196
#define __MAPLE_LIB_H2,22
#define F_SUSPEND_ENABLED 16,355
#define USER_CODE_RAM 17,383
#define USER_CODE_FLASH 18,427
} NVIC_TypeDef;33,724
} NVIC_InitTypeDef;40,902
} SCB_TypeDef;57,1128

maple_usb.c,1118
vu32 bDeviceState 7,175
vu16 wIstr;10,254
vu8 bIntPackSOF 11,266
DEVICE Device_Table 13,288
DEVICE_PROP Device_Property 19,343
USER_STANDARD_REQUESTS User_Standard_Requests 36,654
} ResumeS;75,1303
void nothingProc(79,1333
void usbAppInit(83,1388
void usbSuspend(89,1515
void usbResumeInit(99,1703
void usbResume(113,1931
RESULT usbPowerOn(163,3014
RESULT usbPowerOff(178,3307
void usbInit(191,3625
void usbReset(205,3896
void usbStatusIn(230,4526
void usbStatusOut(236,4743
RESULT usbDataSetup(240,4829
RESULT usbNoDataSetup(280,5681
RESULT usbGetInterfaceSetting(291,5929
u8* usbGetDeviceDescriptor(300,6132
u8* usbGetConfigDescriptor(308,6407
u8* usbGetStringDescriptor(316,6682
u8* usbGetFunctionalDescriptor(330,7066
void usbGetConfiguration(343,7414
void usbSetConfiguration(347,7474
void usbGetInterface(354,7597
void usbSetInterface(358,7653
void usbGetStatus(362,7709
void usbClearFeature(366,7762
void usbSetEndpointFeature(370,7818
void usbSetDeviceFeature(374,7880
void usbSetDeviceAddress(378,7940
void usbEnbISR(384,8049
void usbDsbISR(399,8496
void usbISTR(408,8807

maple_usb_desc.h,32
#define __MAPLE_USB_DESC_H2,27

stm32_lib/cortexm3_macro.h,35
#define __CORTEXM3_MACRO_H18,1030

stm32_lib/stm32f10x_type.h,2120
#define __STM32F10x_TYPE_H19,1106
typedef signed long  s32;23,1300
typedef signed short s16;24,1327
typedef signed char  s8;25,1354
typedef signed long  const sc32;27,1382
typedef signed short const sc16;28,1433
typedef signed char  const sc8;29,1484
typedef volatile signed long  vs32;31,1537
typedef volatile signed short vs16;32,1574
typedef volatile signed char  vs8;33,1611
typedef volatile signed long  const vsc32;35,1649
typedef volatile signed short const vsc16;36,1710
typedef volatile signed char  const vsc8;37,1771
typedef unsigned long  u32;39,1834
typedef unsigned short u16;40,1863
typedef unsigned char  u8;41,1892
typedef unsigned long  const uc32;43,1922
typedef unsigned short const uc16;44,1975
typedef unsigned char  const uc8;45,2028
typedef volatile unsigned long  vu32;47,2083
typedef volatile unsigned short vu16;48,2122
typedef volatile unsigned char  vu8;49,2161
typedef volatile unsigned long  const vuc32;51,2201
typedef volatile unsigned short const vuc16;52,2264
typedef volatile unsigned char  const vuc8;53,2327
typedef enum {FALSE FALSE55,2392
typedef enum {FALSE = 0, TRUE 55,2392
typedef enum {FALSE = 0, TRUE = !FALSE}FALSE55,2392
typedef enum {FALSE = 0, TRUE = !FALSE} bool;55,2392
typedef enum {RESET RESET57,2441
typedef enum {RESET = 0, SET 57,2441
typedef enum {RESET = 0, SET = !RESET}RESET57,2441
typedef enum {RESET = 0, SET = !RESET} FlagStatus, ITStatus;57,2441
typedef enum {DISABLE DISABLE59,2505
typedef enum {DISABLE = 0, ENABLE 59,2505
typedef enum {DISABLE = 0, ENABLE = !DISABLE}DISABLE59,2505
typedef enum {DISABLE = 0, ENABLE = !DISABLE} FunctionalState;59,2505
#define IS_FUNCTIONAL_STATE(60,2569
typedef enum {ERROR ERROR62,2653
typedef enum {ERROR = 0, SUCCESS 62,2653
typedef enum {ERROR = 0, SUCCESS = !ERROR}ERROR62,2653
typedef enum {ERROR = 0, SUCCESS = !ERROR} ErrorStatus;62,2653
#define U8_MAX 64,2712
#define S8_MAX 65,2742
#define S8_MIN 66,2772
#define U16_MAX 67,2803
#define S16_MAX 68,2837
#define S16_MIN 69,2870
#define U32_MAX 70,2904
#define S32_MAX 71,2944
#define S32_MIN 72,2982

maple_lib.c,513
void setPin(3,24
void resetPin(8,125
void strobePin(13,231
void strobeCode 25,448
void systemReset(44,842
void setupCLK 54,1198
void setupLED 72,1866
void setupUSB 91,2283
void setupTimer(130,3222
void setupFLASH(134,3273
bool checkUserCode 150,3603
void jumpToUser 160,3766
  typedef void (*funcPtr)funcPtr161,3798
void nvicInit(177,4277
void systemHardReset(212,5565
  typedef void (*funcPtr)funcPtr214,5642
bool flashErasePage(238,6029
bool flashWriteWord(256,6392
void flashLock(284,7070

maple_regs.h,1355
#define __MAPLE_REGS_H2,23
#define RCC 5,97
#define FLASH 6,129
#define GPIOA 7,161
#define GPIOC 8,193
#define RCC_CR 10,226
#define RCC_CFGR 11,250
#define RCC_CIR 12,281
#define RCC_AHBENR 13,312
#define RCC_APB2ENR 14,343
#define RCC_APB1ENR 15,374
#define FLASH_ACR 17,406
#define FLASH_KEYR 18,441
#define FLASH_OPTKEYR 19,476
#define FLASH_SR 20,511
#define FLASH_CR 21,546
#define FLASH_AR 22,581
#define FLASH_OBR 23,616
#define FLASH_WRPR 24,651
#define FLASH_KEY1 25,686
#define FLASH_KEY2 26,719
#define FLASH_RDPRT 27,752
#define GPIO_CRL(29,782
#define GPIO_CRH(30,811
#define GPIO_ODR(31,845
#define GPIO_BSRR(32,879
#define SCS_BASE 34,914
#define NVIC_BASE 35,951
#define SCB_BASE 36,990
#define SCS 39,1031
#define NVIC 40,1056
#define SCB 41,1080
#define TIM1_APB2_ENB 43,1105
#define TIM1 44,1145
#define TIM1_PSC 45,1185
#define TIM1_ARR 46,1217
#define TIM1_RCR 47,1249
#define TIM1_CR1 48,1281
#define TIM1_CR2 49,1313
#define TIM1_DIER 50,1345
#define TIM1_UP_IRQ_Channel 51,1377
#define USB_HP_IRQ 53,1417
#define USB_LP_IRQ 54,1448
#define TIM2_IRQ 55,1479
#define AIRCR_RESET 59,1525
#define AIRCR_RESET_REQ 60,1564
#define __VAL(63,1665
#define __PSC(64,1731
#define __ARR(65,1818
#define SET_REG(68,1965
#define GET_REG(69,2010
} RCC_RegStruct;87,2508
#define pRCC 88,2525

maple_dfu.h,1116
#define __MAPLE_DFU_H2,22
typedef u8*(*ClassReqCB)ClassReqCB7,89
typedef struct _DFUStatus 10,143
} DFUStatus;17,341
#define  DFU_DETACH 37,993
#define  DFU_DNLOAD 38,1078
#define  DFU_UPLOAD 39,1167
#define  DFU_GETSTATUS 40,1256
#define  DFU_CLRSTATUS 41,1343
#define  DFU_GETSTATE 42,1428
#define  DFU_ABORT 43,1514
#define  OK 46,1631
#define  errTARGET 47,1676
#define  errFILE 48,1752
#define  errWRITE 49,1817
#define  errERASE 50,1886
#define  errCHECK_ERASED 51,1942
#define  errPROG 52,2004
#define  errVERIFY 53,2071
#define  errADDRESS 54,2143
#define  errNOTDONE 55,2200
#define  errFIRMWARE 56,2298
#define  errVENDOR 57,2397
#define  errUSBR 58,2455
#define  errPOR 59,2513
#define  errUNKNOWN 60,2575
#define  errSTALLEDPKT 61,2625
#define  appIDLE 65,2764
#define  appDETACH 66,2801
#define  dfuIDLE 67,2838
#define  dfuDNLOAD_SYNC 68,2875
#define  dfuDNBUSY 69,2912
#define  dfuDNLOAD_IDLE 70,2949
#define  dfuMANIFEST_SYNC 71,2986
#define  dfuMANIFEST 72,3023
#define  dfuMANIFEST_WAIT_RESET 73,3060
#define  dfuUPLOAD_IDLE 74,3097
#define  dfuERROR 75,3134

main.c,203
void USB_LP_CAN1_RX0_IRQHandler(4,79
void NMI_Handler(8,139
void HardFault_Handler(15,266
void MemManage_Handler(22,399
void BusFault_Handler(29,532
void UsageFault_Handler(36,664
int main 43,798

usb_lib/usb_init.c,302
 u8	EPindex;24,1436
DEVICE_INFO *pInformation;pInformation29,1672
DEVICE_PROP *pProperty;pProperty32,1828
u16	SaveState 37,2079
u16  wInterrupt_Mask;38,2096
DEVICE_INFO	Device_Info;39,2119
USER_STANDARD_REQUESTS  *pUser_Standard_Requests;pUser_Standard_Requests40,2145
void USB_Init(53,2763

usb_lib/usb_core.h,1288
#define __USB_CORE_H18,1034
typedef enum _CONTROL_STATE22,1222
  WAIT_SETUP,24,1254
  SETTING_UP,25,1283
  IN_DATA,26,1312
  OUT_DATA,27,1341
  LAST_IN_DATA,28,1370
  LAST_OUT_DATA,29,1399
  WAIT_STATUS_IN,30,1428
  WAIT_STATUS_OUT,31,1457
  STALLED,32,1486
  PAUSE 33,1515
} CONTROL_STATE;34,1545
typedef struct OneDescriptor36,1617
ONE_DESCRIPTOR, *PONE_DESCRIPTOR;PONE_DESCRIPTOR41,1696
typedef enum _RESULT45,1904
  USB_SUCCESS 47,1929
  USB_ERROR,48,1978
  USB_UNSUPPORT,49,1992
  USB_NOT_READY 50,2010
} RESULT;52,2139
typedef struct _ENDPOINT_INFO56,2235
}ENDPOINT_INFO;ENDPOINT_INFO84,3335
typedef struct _DEVICE88,3437
DEVICE;93,3599
  struct BW98,3638
} u16_u8;104,3694
typedef struct _DEVICE_INFO106,3707
}DEVICE_INFO;DEVICE_INFO122,4340
typedef struct _DEVICE_PROP124,4357
}DEVICE_PROP;DEVICE_PROP180,6701
typedef struct _USER_STANDARD_REQUESTS182,6718
USER_STANDARD_REQUESTS;194,7380
#define Type_Recipient 197,7489
#define Usb_rLength 199,7577
#define Usb_rOffset 200,7610
#define USBwValue 202,7645
#define USBwValue0 203,7677
#define USBwValue1 204,7715
#define USBwIndex 205,7753
#define USBwIndex0 206,7785
#define USBwIndex1 207,7823
#define USBwLength 208,7861
#define USBwLength0 209,7895
#define USBwLength1 210,7935

usb_lib/usb_regs.c,1698
void SetCNTR(34,1949
u16 GetCNTR(46,2349
void SetISTR(58,2744
u16 GetISTR(70,3142
u16 GetFNR(82,3526
void SetDADDR(94,3920
u16 GetDADDR(106,4323
void SetBTABLE(118,4708
u16 GetBTABLE(130,5112
void SetENDPOINT(143,5543
u16 GetENDPOINT(155,6000
void SetEPType(168,6465
u16 GetEPType(180,6888
void SetEPTxStatus(193,7339
void SetEPRxStatus(206,7811
void SetDouBleBuffEPStall(219,8318
u16 GetEPTxStatus(240,9085
u16 GetEPRxStatus(252,9519
void SetEPTxValid(264,9938
void SetEPRxValid(276,10361
void SetEP_KIND(288,10775
void ClearEP_KIND(300,11172
void Clear_Status_Out(311,11598
void Set_Status_Out(322,12024
void SetEPDoubleBuff(333,12456
void ClearEPDoubleBuff(344,12892
u16 GetTxStallStatus(355,13334
u16 GetRxStallStatus(366,13787
void ClearEP_CTR_RX(377,14203
void ClearEP_CTR_TX(388,14608
void ToggleDTOG_RX(399,15014
void ToggleDTOG_TX(410,15418
void ClearDTOG_RX(421,15821
void ClearDTOG_TX(432,16222
void SetEPAddress(444,16673
u8 GetEPAddress(455,17105
void SetEPTxAddr(467,17563
void SetEPRxAddr(479,18030
u16 GetEPTxAddr(490,18476
u16 GetEPRxAddr(501,18911
void SetEPTxCount(513,19356
void SetEPCountRxReg(525,19848
void SetEPRxCount(537,20319
u16 GetEPTxCount(548,20743
u16 GetEPRxCount(559,21155
void SetEPDblBuffAddr(572,21698
void SetEPDblBuf0Addr(584,22207
void SetEPDblBuf1Addr(596,22690
u16 GetEPDblBuf0Addr(607,23141
u16 GetEPDblBuf1Addr(618,23592
void SetEPDblBuffCount(630,24058
void SetEPDblBuf0Count(642,24571
void SetEPDblBuf1Count(654,25085
u16 GetEPDblBuf0Count(666,25630
u16 GetEPDblBuf1Count(678,26148
EP_DBUF_DIR GetEPDblBufDir(690,26686
void FreeUserBuffer(707,27370
u16 ToWord(726,27974
u16 ByteSwap(739,28411

usb_lib/usb_init.h,29
#define __USB_INIT_H18,1027

usb_lib/usb_int.c,91
u16 SaveRState;23,1370
u16 SaveTState;24,1387
void CTR_LP(41,2176
void CTR_HP(158,5589

usb_lib/usb_def.h,1111
#define __USB_DEF_H18,1014
typedef enum _RECIPIENT_TYPE22,1201
  DEVICE_RECIPIENT,24,1234
  INTERFACE_RECIPIENT,25,1282
  ENDPOINT_RECIPIENT,26,1333
  OTHER_RECIPIENT27,1383
} RECIPIENT_TYPE;28,1402
typedef enum _STANDARD_REQUESTS31,1425
  GET_STATUS 33,1461
  CLEAR_FEATURE,34,1480
  RESERVED1,35,1498
  SET_FEATURE,36,1512
  RESERVED2,37,1528
  SET_ADDRESS,38,1542
  GET_DESCRIPTOR,39,1558
  SET_DESCRIPTOR,40,1577
  GET_CONFIGURATION,41,1596
  SET_CONFIGURATION,42,1618
  GET_INTERFACE,43,1640
  SET_INTERFACE,44,1658
  TOTAL_sREQUEST,45,1676
  SYNCH_FRAME 46,1735
} STANDARD_REQUESTS;47,1755
typedef enum _DESCRIPTOR_TYPE50,1812
  DEVICE_DESCRIPTOR 52,1846
  CONFIG_DESCRIPTOR,53,1872
  STRING_DESCRIPTOR,54,1894
  INTERFACE_DESCRIPTOR,55,1916
  ENDPOINT_DESCRIPTOR56,1941
} DESCRIPTOR_TYPE;57,1964
typedef enum _FEATURE_SELECTOR60,2044
  ENDPOINT_STALL,62,2079
  DEVICE_REMOTE_WAKEUP63,2098
} FEATURE_SELECTOR;64,2122
#define REQUEST_TYPE 68,2267
#define STANDARD_REQUEST 69,2331
#define CLASS_REQUEST 70,2387
#define VENDOR_REQUEST 71,2440
#define RECIPIENT 73,2496

usb_lib/usb_mem.h,28
#define __USB_MEM_H18,1036

usb_lib/usb_lib.h,28
#define __USB_LIB_H18,1008

usb_lib/usb_mem.c,68
void UserToPMABufferCopy(35,2123
void PMAToUserBufferCopy(60,3056

usb_lib/usb_type.h,1591
#define __USB_TYPE_H18,1025
#define NULL 23,1227
typedef signed long      s32;28,1293
typedef signed short     s16;29,1324
typedef signed char      s8;30,1355
typedef volatile signed long      vs32;32,1387
typedef volatile signed short     vs16;33,1428
typedef volatile signed char      vs8;34,1469
typedef unsigned long       u32;36,1511
typedef unsigned short      u16;37,1545
typedef unsigned char       u8;38,1579
typedef unsigned long  const    uc32;40,1614
typedef unsigned short const    uc16;41,1670
typedef unsigned char  const    uc8;42,1726
typedef volatile unsigned long      vu32;44,1784
typedef volatile unsigned short     vu16;45,1827
typedef volatile unsigned char      vu8;46,1870
typedef volatile unsigned long  const    vuc32;48,1914
typedef volatile unsigned short const    vuc16;49,1980
typedef volatile unsigned char  const    vuc8;50,2046
  FALSE 55,2133
  FALSE = 0, TRUE 55,2133
  FALSE = 0, TRUE  = !FALSEFALSE55,2133
bool;57,2165
typedef enum { RESET 59,2174
typedef enum { RESET = 0, SET 59,2174
typedef enum { RESET = 0, SET   = !RESET RESET59,2174
typedef enum { RESET = 0, SET   = !RESET } FlagStatus, ITStatus;59,2174
typedef enum { DISABLE 61,2242
typedef enum { DISABLE = 0, ENABLE 61,2242
typedef enum { DISABLE = 0, ENABLE  = !DISABLE}DISABLE61,2242
typedef enum { DISABLE = 0, ENABLE  = !DISABLE} FunctionalState;61,2242
typedef enum { ERROR 63,2310
typedef enum { ERROR = 0, SUCCESS 63,2310
typedef enum { ERROR = 0, SUCCESS  = !ERROR}ERROR63,2310
typedef enum { ERROR = 0, SUCCESS  = !ERROR} ErrorStatus;63,2310

usb_lib/usb_core.c,1093
#define ValBit(20,1188
#define SetBit(21,1239
#define ClrBit(22,1291
#define Send0LengthData(24,1353
#define vSetEPRxStatus(28,1452
#define vSetEPTxStatus(29,1498
#define USB_StatusIn(31,1546
#define USB_StatusOut(32,1588
#define StatusInfo0 34,1643
#define StatusInfo1 35,1706
u16_u8 StatusInfo;39,1911
bool Data_Mul_MaxPacketSize 40,1931
u8 *Standard_GetConfiguration(Standard_GetConfiguration56,2769
RESULT Standard_SetConfiguration(77,3612
u8 *Standard_GetInterface(Standard_GetInterface102,4549
RESULT Standard_SetInterface(123,5389
u8 *Standard_GetStatus(Standard_GetStatus158,6654
RESULT Standard_ClearFeature(236,8580
RESULT Standard_SetEndPointFeature(325,11075
RESULT Standard_SetDeviceFeature(379,12559
u8 *Standard_GetDescriptorData(Standard_GetDescriptorData405,13943
void DataStageOut(426,14586
void DataStageIn(483,16067
void NoData_Setup0(542,17675
void Data_Setup0(666,20727
u8 Setup0_Process(847,25937
u8 In0_Process(891,27284
u8 Out0_Process(931,28419
u8 Post0_Process(972,29552
void SetDeviceAddress(992,30185
void NOP_Process(1012,30797

usb_lib/usb_regs.h,4600
#define __USB_REGS_H18,1036
typedef enum _EP_DBUF_DIR22,1224
  EP_DBUF_ERR,25,1298
  EP_DBUF_OUT,26,1314
  EP_DBUF_IN27,1330
}EP_DBUF_DIR;EP_DBUF_DIR28,1344
enum EP_BUF_NUM31,1391
  EP_NOBUF,33,1411
  EP_BUF0,34,1424
  EP_BUF135,1436
#define RegBase 39,1535
#define PMAAddr 40,1615
#define CNTR 47,1969
#define ISTR 49,2059
#define FNR 51,2145
#define DADDR 53,2233
#define BTABLE 55,2327
#define EP0REG 59,2630
#define ENDP0 62,2745
#define ENDP1 63,2770
#define ENDP2 64,2795
#define ENDP3 65,2820
#define ENDP4 66,2845
#define ENDP5 67,2870
#define ENDP6 68,2895
#define ENDP7 69,2920
#define ISTR_CTR 73,3191
#define ISTR_DOVR 74,3261
#define ISTR_ERR 75,3332
#define ISTR_WKUP 76,3391
#define ISTR_SUSP 77,3452
#define ISTR_RESET 78,3513
#define ISTR_SOF 79,3572
#define ISTR_ESOF 80,3640
#define ISTR_DIR 83,3721
#define ISTR_EP_ID 84,3800
#define CLR_CTR 86,3876
#define CLR_DOVR 87,3943
#define CLR_ERR 88,4010
#define CLR_WKUP 89,4066
#define CLR_SUSP 90,4128
#define CLR_RESET 91,4190
#define CLR_SOF 92,4251
#define CLR_ESOF 93,4318
#define CNTR_CTRM 98,4640
#define CNTR_DOVRM 99,4698
#define CNTR_ERRM 100,4757
#define CNTR_WKUPM 101,4804
#define CNTR_SUSPM 102,4853
#define CNTR_RESETM 103,4902
#define CNTR_SOFM 104,4951
#define CNTR_ESOFM 105,5007
#define CNTR_RESUME 108,5076
#define CNTR_FSUSP 109,5127
#define CNTR_LPMODE 110,5177
#define CNTR_PDWN 111,5228
#define CNTR_FRES 112,5275
#define FNR_RXDP 117,5575
#define FNR_RXDM 118,5631
#define FNR_LCK 119,5687
#define FNR_LSOF 120,5727
#define FNR_FN 121,5769
#define DADDR_EF 125,6060
#define DADDR_ADD 126,6085
#define EP_CTR_RX 131,6378
#define EP_DTOG_RX 132,6446
#define EPRX_STAT 133,6509
#define EP_SETUP 134,6577
#define EP_T_FIELD 135,6631
#define EP_KIND 136,6684
#define EP_CTR_TX 137,6737
#define EP_DTOG_TX 138,6805
#define EPTX_STAT 139,6868
#define EPADDR_FIELD 140,6936
#define EPREG_MASK 143,7049
#define EP_TYPE_MASK 146,7172
#define EP_BULK 147,7230
#define EP_CONTROL 148,7283
#define EP_ISOCHRONOUS 149,7339
#define EP_INTERRUPT 150,7399
#define EP_T_MASK 151,7457
#define EPKIND_MASK 155,7541
#define EP_TX_DIS 158,7634
#define EP_TX_STALL 159,7694
#define EP_TX_NAK 160,7753
#define EP_TX_VALID 161,7810
#define EPTX_DTOG1 162,7867
#define EPTX_DTOG2 163,7935
#define EPTX_DTOGMASK 164,8003
#define EP_RX_DIS 167,8095
#define EP_RX_STALL 168,8155
#define EP_RX_NAK 169,8214
#define EP_RX_VALID 170,8271
#define EPRX_DTOG1 171,8328
#define EPRX_DTOG2 172,8396
#define EPRX_DTOGMASK 173,8464
#define _SetCNTR(176,8608
#define _SetISTR(179,8682
#define _SetDADDR(182,8757
#define _SetBTABLE(185,8833
#define _GetCNTR(188,8918
#define _GetISTR(191,8971
#define _GetFNR(194,9023
#define _GetDADDR(197,9076
#define _GetBTABLE(200,9132
#define _SetENDPOINT(203,9191
#define _GetENDPOINT(207,9297
#define _SetEPType(217,9760
#define _GetEPType(227,10280
#define _SetEPTxStatus(237,10753
#define _SetEPRxStatus(257,11605
#define _GetEPTxStatus(277,12440
#define _GetEPRxStatus(279,12514
#define _SetEPTxValid(288,12982
#define _SetEPRxValid(290,13057
#define _GetTxStallStatus(299,13540
#define _GetRxStallStatus(301,13653
#define _SetEP_KIND(311,14122
#define _ClearEP_KIND(313,14259
#define _Set_Status_Out(323,14788
#define _Clear_Status_Out(324,14844
#define _SetEPDoubleBuff(333,15302
#define _ClearEPDoubleBuff(334,15358
#define _ClearEP_CTR_RX(343,15806
#define _ClearEP_CTR_TX(345,15945
#define _ToggleDTOG_RX(355,16476
#define _ToggleDTOG_TX(357,16620
#define _ClearDTOG_RX(367,17152
#define _ClearDTOG_TX(369,17258
#define _SetEPAddress(379,17754
#define _GetEPAddress(389,18216
#define _pEPTxAddr(391,18293
#define _pEPTxCount(392,18370
#define _pEPRxAddr(393,18448
#define _pEPRxCount(394,18525
#define _SetEPTxAddr(404,19036
#define _SetEPRxAddr(405,19116
#define _GetEPTxAddr(414,19577
#define _GetEPRxAddr(415,19634
#define _BlocksOf32(425,20097
#define _BlocksOf2(432,20299
#define _SetEPCountRxReg(439,20487
#define _SetEPRxDblBuf0Count(447,20691
#define _SetEPTxCount(459,21234
#define _SetEPRxCount(460,21304
#define _GetEPTxCount(471,21802
#define _GetEPRxCount(472,21870
#define _SetEPDblBuf0Addr(482,22380
#define _SetEPDblBuf1Addr(483,22460
#define _SetEPDblBuffAddr(494,23004
#define _GetEPDblBuf0Addr(506,23573
#define _GetEPDblBuf1Addr(507,23631
#define _SetEPDblBuf0Count(519,24267
#define _SetEPDblBuf1Count(528,24563
#define _SetEPDblBuffCount(537,24850
#define _GetEPDblBuf0Count(549,25426
#define _GetEPDblBuf1Count(550,25486

usb_lib/usb_conf.h,653
#define __USB_CONF_H18,1033
#define EP_NUM 30,1754
#define BTABLE_ADDRESS 37,2068
#define ENDP0_RXADDR 41,2150
#define ENDP0_TXADDR 42,2186
#define IMR_MSK 51,2536
#define  EP1_IN_Callback 62,2855
#define  EP2_IN_Callback 63,2895
#define  EP3_IN_Callback 64,2935
#define  EP4_IN_Callback 65,2975
#define  EP5_IN_Callback 66,3015
#define  EP6_IN_Callback 67,3055
#define  EP7_IN_Callback 68,3095
#define  EP1_OUT_Callback 71,3139
#define  EP2_OUT_Callback 72,3180
#define  EP3_OUT_Callback 73,3221
#define  EP4_OUT_Callback 74,3262
#define  EP5_OUT_Callback 75,3303
#define  EP6_OUT_Callback 76,3344
#define  EP7_OUT_Callback 77,3385

usb_lib/usb_int.h,28
#define __USB_INT_H19,1074

maple_dfu.c,638
u32 userAppAddr 4,42
DFUStatus dfuAppStatus;5,109
bool copyLock 6,160
bool userFlash 7,183
u8 recvBuffer[recvBuffer9,208
u32 userFirmwareLen 10,238
u16 thisBlockLen 11,263
enum PLOT 13,287
  BEGINNING,14,299
  MIDDLE,15,312
  END16,322
}code_copy_lock;code_copy_lock17,328
void dfuInit(20,412
bool dfuUpdateByRequest(35,958
void dfuUpdateByReset(230,7871
void dfuUpdateByTimeout(278,9618
u8* dfuCopyState(281,9653
u8* dfuCopyStatus(290,9820
u8* dfuCopyDNLOAD(300,9981
u8* dfuCopyUPLOAD(310,10292
void dfuCopyBufferToExec(328,11061
bool checkTestFile(350,11588
u8 dfuGetState(361,11746
void dfuSetState(365,11802
